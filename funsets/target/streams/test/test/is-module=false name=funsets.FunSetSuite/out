[0m[[0minfo[0m] [0m[32mFunSetSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- string take[0m[0m
[0m[[0minfo[0m] [0m[32m- adding ints[0m[0m
[0m[[0minfo[0m] [0m[32m- contains is implemented[0m[0m
[0m[[0minfo[0m] [0m[32m- singletonSet(1) contains 1[0m[0m
[0m[[0minfo[0m] [0m[32m- union contains all elements[0m[0m
[0m[[0minfo[0m] [0m[32m- intersect contains all elements that are in both sets[0m[0m
[0m[[0minfo[0m] [0m[32m- diff contains all elements of s that are not in t[0m[0m
[0m[[0minfo[0m] [0m[32m- filter returns the subset of 's' for which 'p' holds[0m[0m
[0m[[0minfo[0m] [0m[32m- forall should return false if all integers within s do not satisfy p[0m[0m
[0m[[0minfo[0m] [0m[32m- forall should return true if all integers within s satisfy p[0m[0m
[0m[[0minfo[0m] [0m[32m- exist should true for a bounded integer within s that satisfies p[0m[0m
[0m[[0minfo[0m] [0m[32m- exist should return false for an out-of-bounds integer that satisfies p[0m[0m
[0m[[0minfo[0m] [0m[32m- exist should return false for a bounded integer that does not satisfy p[0m[0m
